package com.example.GR.Security.auditing;


import com.example.GR.Account.model.User;
import org.springframework.data.domain.AuditorAware;
import org.springframework.security.authentication.AnonymousAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;

import java.util.Optional;

public class ApplicationAuditAware implements AuditorAware<Integer> {

    @Override
    public Optional<Integer> getCurrentAuditor() {
        Authentication authentication =
                SecurityContextHolder
                        .getContext()
                        .getAuthentication();

        if (authentication == null ||
                !authentication.isAuthenticated() ||
                authentication instanceof AnonymousAuthenticationToken) {
            return Optional.empty();
        }

        // Cast the principal to your custom UserDetails (User class)
        User userPrincipal = (User) authentication.getPrincipal();

        // Use the getUserId method generated by Lombok to get the ID of the user
        return Optional.ofNullable(userPrincipal.getUserId());
    }
}